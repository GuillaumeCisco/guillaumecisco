{
    "private": true,
    "name": "guillaumecisco",
    "productName": "Guillaume Cisco Website",
    "author": "Guillaume Cisco <guillaumecisco@gmail.com>",
    "version": "0.0.1",
    "license": "MIT",
    "description": "Guillaume Cisco's website",
    "repository": {
        "type": "git",
        "url": "https://github.com/GuillaumeCisco/guillaumecisco"
    },
    "engines": {
        "node": ">=8.4.0",
        "npm": ">=5.3.0"
    },
    "workspaces": [
        "packages/*"
    ],
    "scripts": {
        "start": "npm run clean && cross-env NODE_ENV=development babel-watch src/server/index.js",
        "start:prod": "npm run build:main && npm run serve",
        "serve": "cross-env NODE_ENV=production babel-node build/server/index.js",
        "build:main": "npm run build:client && npm run build:server && npm run build:node",
        "build:client": "rimraf build/client && cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --progress --config webpack/client.js",
        "build:server": "rimraf build/server && cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --progress --config webpack/server.js",
        "build:node": "cross-env NODE_ENV=production babel src/server/index.js -o build/server/index.js",
        "deploy": "tools/deploy.js",
        "electron-package": "tools/electron-package.js",
        "clean": "rimraf build",
        "test": "cross-env NODE_ENV=development ./node_modules/.bin/mocha --compilers js:babel-register \"./src/**/*.spec.js\"",
        "cover": "./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --compilers js:babel-register \"./src/frontend/js/**/*.spec.js\"",
        "precommit-msg": "echo 'Pre-commit checks...' && exit 0",
        "eslint": "./node_modules/.bin/eslint --fix src webpack",
        "dev": "cross-env IS_ELECTRON=1 START_HOT=1 npm run start-renderer-dev",
        "start-main-dev": "cross-env IS_ELECTRON=1 HOT=1 NODE_ENV=development electron -r babel-register --require babel-polyfill ./src/electron/main",
        "start-renderer-dev": "cross-env IS_ELECTRON=1 NODE_ENV=development babel-node ./node_modules/webpack-dev-server/bin/webpack-dev-server --config ./webpack/electron/renderer.dev.js",
        "start:electron": "cross-env IS_ELECTRON=1 NODE_ENV=production electron ./build/electron/index.js",
        "build:electron": "concurrently \"npm run build-main\" \"npm run build-renderer\"",
        "build-main": "cross-env IS_ELECTRON=1 NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --progress --config webpack/electron/main.js --colors",
        "build-renderer": "cross-env IS_ELECTRON=1 NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --progress --config webpack/electron/renderer.prod.js --colors",
        "package": "npm run build:electron && build --publish never",
        "package-all": "npm run build:electron && build -mwl",
        "package-linux": "npm run build:electron && build --linux",
        "package-win": "npm run build:electron && build --win --x64",
        "build-electron": "build --publish never"
    },
    "dependencies": {
        "webpack-sources": "1.0.1"
    },
    "resolutions": {
        "webpack-sources": "1.0.1"
    }
}
